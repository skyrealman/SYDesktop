<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:comp="com.sz.sydesktop.view.components.*"  width="100%" height="100%"
		 initialize="initializeHandler(event)" xmlns:control="com.sz.sydesktop.control.*" xmlns:business="com.sz.sydesktop.business.*">
	<fx:Script>
		<![CDATA[
			import com.sz.sydesktop.events.GetAppEvent;
			import com.sz.sydesktop.events.RefreshCalendarEvent;
			import com.sz.sydesktop.events.RefreshContactEvent;
			import com.sz.sydesktop.events.RefreshPendingsEvent;
			import com.sz.sydesktop.events.RefreshTrackEvent;
			import com.sz.sydesktop.model.ModelLocator;
			import com.sz.sydesktop.util.Update;
			import com.sz.sydesktop.util.Utillity;
			
			import mx.events.FlexEvent;
			
			public var dataTimer:Timer;
			protected function initializeHandler(event:FlexEvent):void
			{
				Update.check();
				
				NativeApplication.nativeApplication.addEventListener(BrowserInvokeEvent.BROWSER_INVOKE, function listener(e:BrowserInvokeEvent):void{
					if(e.arguments.length == 3){
						var token:String = e.arguments[0] + "@" + e.arguments[1];
						Utillity.saveToken(token);
						NativeApplication.nativeApplication.exit();
					}else
						NativeApplication.nativeApplication.exit();
				});
				var USER_TOKEN:String = Utillity.readToken();
				if(USER_TOKEN != null){
					ModelLocator.USER_TOKEN = USER_TOKEN;
					var getAppEvent:GetAppEvent = new GetAppEvent();
					getAppEvent.dispatch();
					var getTrackEvent:RefreshTrackEvent = new RefreshTrackEvent();
					getTrackEvent.dispatch();
					var getContactEvent:RefreshContactEvent = new RefreshContactEvent();
					getContactEvent.dispatch();
				}

				
				
				dataTimer = new Timer(1000 * 60 * 3);
				dataTimer.addEventListener(TimerEvent.TIMER,function listener(e:TimerEvent):void {
					if(ModelLocator.WORK==true){
						new RefreshContactEvent().dispatch();
						new RefreshTrackEvent().dispatch();
						
						new RefreshPendingsEvent().dispatch();
						calendarPanel.refreshData();
					}
					
				});
				dataTimer.start();
				
				NativeApplication.nativeApplication.idleThreshold = 2 * 60;
				NativeApplication.nativeApplication.addEventListener(Event.USER_IDLE, onUserIdle);
				NativeApplication.nativeApplication.addEventListener(Event.USER_PRESENT, onUserPresent);
			}
			private function onUserIdle(evt:Event):void {
				if(dataTimer != null && dataTimer.running){
					dataTimer.stop();
				}
			}
			
			private function onUserPresent(evt:Event):void {
				if( ModelLocator.WORK && dataTimer != null && !dataTimer.running){
					dataTimer.start();
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<control:AppControl />
		<control:PendingControl />
		<control:TrackControl />
		<control:ContactControl />
		<control:CalendarControl />
		<business:Services />
	</fx:Declarations>
	<mx:HBox width="100%" height="50%">
		<comp:PendingPanel height="100%" width="{Capabilities.screenResolutionX/4}"  />
		<comp:CalendarPanel  id="calendarPanel" height="100%" width="{Capabilities.screenResolutionX/2}" />
		<comp:ContactPanel height="100%" width="{Capabilities.screenResolutionX/4}"  />
	</mx:HBox>
	<mx:HBox width="100%" height="50%">
		
		<comp:TrackPanel  id="trackPanel" height="100%" width="100%" />
	</mx:HBox>
</mx:VBox>
